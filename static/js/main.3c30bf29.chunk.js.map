{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","hooks/useUser.ts","components/TodoModal/TodoModal.tsx","App.tsx","hooks/useTodos.ts","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","title","type","onClick","TodoFilter","onChange","onClear","inputValue","name","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","localCache","TodoModal","onClose","user","useState","setUser","useEffect","loadUser","a","fetchedUser","push","cachedUser","find","elem","useUser","href","initialQueries","searchInput","searchSelect","App","selectedTodo","setSelectedTodo","searchQueries","setSearchQueries","loading","setLoading","filteredTodos","setTodos","loadTodos","filter","toLowerCase","includes","filterTodos","useTodos","length","e","target","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c30bf29.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  selectTodo: (todo: Todo) => void;\n  selectedTodoId?: number;\n};\n\nexport const TodoList = (\n  {\n    todos,\n    selectTodo,\n    selectedTodoId,\n  }: TodoListProps,\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodoId === todo.id\n                    ? 'far fa-eye-slash' : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","type TodoFilterProps = {\n  onChange: (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => void;\n  onClear: () => void;\n  inputValue: string;\n};\n\nexport const TodoFilter = ({\n  onChange,\n  onClear,\n  inputValue,\n}: TodoFilterProps) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select data-cy=\"statusSelect\" name=\"searchSelect\" onChange={onChange}>\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        name=\"searchInput\"\n        value={inputValue}\n        onChange={onChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        inputValue\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClear}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../api';\n\nimport { User } from '../types/User';\n\nconst localCache: User[] = [];\n\nexport const useUser = (userId: number) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const fetchedUser = await getUser(userId);\n\n      setUser(fetchedUser);\n      localCache.push(fetchedUser);\n    };\n\n    const cachedUser = localCache.find(elem => elem.id === userId);\n\n    if (cachedUser) {\n      setUser(cachedUser);\n    } else {\n      loadUser();\n    }\n  }, [userId]);\n\n  return user;\n};\n","import { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\n\nimport { useUser } from '../../hooks/useUser';\n\ntype TodoModalProps = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal = ({\n  todo: {\n    id,\n    title,\n    completed,\n    userId,\n  },\n  onClose,\n}: TodoModalProps) => {\n  const user = useUser(userId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nimport { Todo } from './types/Todo';\n\nimport { useTodos, SearchQueries } from './hooks/useTodos';\n\nconst initialQueries: SearchQueries = {\n  searchInput: '',\n  searchSelect: 'all',\n};\n\nexport const App = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQueries, setSearchQueries]\n    = useState<SearchQueries>(initialQueries);\n  const [loading, setLoading] = useState(true);\n\n  const filteredTodos = useTodos(searchQueries);\n\n  useEffect(() => {\n    if (filteredTodos.length > 0) {\n      setLoading(false);\n    }\n  }, [filteredTodos]);\n\n  const onChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = e.target;\n\n    setSearchQueries((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const clearSearchInput = () => {\n    setSearchQueries((prevState) => ({\n      ...prevState,\n      searchInput: '',\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChange={onChange}\n                onClear={clearSearchInput}\n                inputValue={searchQueries.searchInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectTodo={setSelectedTodo}\n                selectedTodoId={selectedTodo?.id}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onClose={() => setSelectedTodo(null)} />\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Todo } from '../types/Todo';\nimport { getTodos } from '../api';\n\nexport type SearchQueries = {\n  searchInput: string,\n  searchSelect: 'all' | 'completed' | 'active'\n};\n\nexport const useTodos = (searchQueries: SearchQueries) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      setTodos(await getTodos());\n    };\n\n    loadTodos();\n  }, []);\n\n  const filterTodos = () => {\n    const { searchInput, searchSelect } = searchQueries;\n    let filteredTodos;\n\n    switch (searchSelect) {\n      case 'active':\n        filteredTodos = todos.filter(({ completed }) => completed === false);\n        break;\n      case 'completed':\n        filteredTodos = todos.filter(({ completed }) => completed === true);\n        break;\n      default:\n        filteredTodos = todos;\n    }\n\n    return filteredTodos.filter(\n      ({ title }) => title.toLowerCase().includes(searchInput.toLowerCase()),\n    );\n  };\n\n  const filteredTodos = filterTodos();\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}